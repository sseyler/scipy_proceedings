%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Oliver Beckstein at 2016-05-13 12:23:34 -0700


%% Saved with string encoding Unicode (UTF-8)



@article{Somogyi:2016aa,
	Author = {Somogyi, Endre and Mansour, Andrew Abi and Ortoleva, Peter J.},
	Date-Added = {2016-05-13 19:23:03 +0000},
	Date-Modified = {2016-05-13 19:23:03 +0000},
	Doi = {10.1016/j.cpc.2016.01.014},
	Issn = {0010-4655},
	Journal = {Computer Physics Communications},
	Keywords = {Coarse-graining, GromacsWrapper, MDAnalysis},
	Pages = {337 - 350},
	Title = {{ProtoMD}: A prototyping toolkit for multiscale molecular dynamics},
	Url = {http://www.sciencedirect.com/science/article/pii/S0010465516300030},
	Volume = {202},
	Year = {2016},
	Abstract = {Abstract ProtoMD is a toolkit that facilitates the development of algorithms for multiscale molecular dynamics (MD) simulations. It is designed for multiscale methods which capture the dynamic transfer of information across multiple spatial scales, such as the atomic to the mesoscopic scale, via coevolving microscopic and coarse-grained (CG) variables. ProtoMD can be also be used to calibrate parameters needed in traditional CG-MD methods. The toolkit integrates `GROMACS wrapper' to initiate \{MD\} simulations, and `MDAnalysis' to analyze and manipulate trajectory files. It facilitates experimentation with a spectrum of coarse-grained variables, prototyping rare events (such as chemical reactions), or simulating nanocharacterization experiments such as terahertz spectroscopy, AFM, nanopore, and time-of-flight mass spectroscopy. ProtoMD is written in python and is freely available under the \{GNU\} General Public License from github.com/CTCNano/proto_md. Program summary Program title: ProtoMD Catalogue identifier: AEZN_v1_0 Program summary URL:http://cpc.cs.qub.ac.uk/summaries/AEZN_v1_0.html Program obtainable from: \{CPC\} Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: \{GNU\} General Public License, version 3 No. of lines in distributed program, including test data, etc.: 281345 No. of bytes in distributed program, including test data, etc.: 3706191 Distribution format: tar.gz Programming language: Python 2.7.3. Computer: x86/x86 64. Operating system: Linux. RAM: Depends on the size of the system being simulated and duration of the simulation (few \{MBs\} to TBs) Classification: 3, 4.12, 16.9, 23. External routines: \{GROMACS\} (tested with versions 4.6x and 5.0x), MDAnalysis, GromacsWrapper, numpy, scipy, \{MPI\} Nature of problem: Prototyping multiscale coarse-grained algorithms for molecular dynamics. Solution method: Combining the open-source \{GROMACS\} molecular dynamics package and the python-based \{MDAnalysis\} library for running, debugging, and analyzing multiscale simulations Restrictions: The system under study must be characterized by a clear separation of timescales; otherwise, the multiscale algorithm fails to capture the slowly-varying modes. Running time: Depending on the problem size, simulations can take few hours to months. },
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8Qai4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svQ29tcHV0ZXIgUGh5c2ljcyBDb21tdW5pY2F0aW9uc18yMDJfU29tb2d5aV8yMDE2YS5wZGbSFwsYGVdOUy5kYXRhTxECIgAAAAACIgACAAAERGF0YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0yQMDEgrAAAAFjJAH0NvbXB1dGVyIFBoeXNpY3MgQ29tIzE2NDdBNC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWR6TTI3q5AAAAAAAAAAAABgAFAAAJAAAAAAAAAAAAAAAAAAAAAAdCaWJEZXNrAAAQAAgAANMkbnwAAAARAAgAANMj3SkAAAABABQAFjJAABYyPgAWL1gAFT4MAAAZ4QACAFNEYXRhOm9saXZlcjoARG9jdW1lbnRzOgBQdWJsaWNhdGlvbnM6AHBkZjoAQmliRGVzazoAQ29tcHV0ZXIgUGh5c2ljcyBDb20jMTY0N0E0LnBkZgAADgBsADUAQwBvAG0AcAB1AHQAZQByACAAUABoAHkAcwBpAGMAcwAgAEMAbwBtAG0AdQBuAGkAYwBhAHQAaQBvAG4AcwBfADIAMAAyAF8AUwBvAG0AbwBnAHkAaQBfADIAMAAxADYAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBgL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL0NvbXB1dGVyIFBoeXNpY3MgQ29tbXVuaWNhdGlvbnNfMjAyX1NvbW9neWlfMjAxNmEucGRmABMADS9Wb2x1bWVzL0RhdGEA//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A+wEAAQgDLgMwAzUDQANJA1cDWwNiA2sDcAN9A4ADkgOVA5oAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADnA==},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0010465516300030},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/j.cpc.2016.01.014}}

@article{Tiberti:2015fk,
	Author = {Tiberti, Matteo and Papaleo, Elena and Bengtsen, Tone and Boomsma, Wouter and Lindorff-Larsen, Kresten},
	Date-Added = {2016-05-13 19:22:48 +0000},
	Date-Modified = {2016-05-13 19:22:48 +0000},
	Doi = {10.1371/journal.pcbi.1004415},
	Journal = {PLoS Comput Biol},
	Keywords = {ensemble, convergence, software, Python, MDAnalysis},
	Month = {10},
	Number = {10},
	Pages = {e1004415},
	Publisher = {Public Library of Science},
	Title = {{ENCORE}: Software for Quantitative Ensemble Comparison},
	Url = {http://dx.doi.org/10.1371%2Fjournal.pcbi.1004415},
	Volume = {11},
	Year = {2015},
	Abstract = {<p>There is increasing evidence that protein dynamics and conformational changes can play an important role in modulating biological function. As a result, experimental and computational methods are being developed, often synergistically, to study the dynamical heterogeneity of a protein or other macromolecules in solution. Thus, methods such as molecular dynamics simulations or ensemble refinement approaches have provided conformational ensembles that can be used to understand protein function and biophysics. These developments have in turn created a need for algorithms and software that can be used to compare structural ensembles in the same way as the root-mean-square-deviation is often used to compare static structures. Although a few such approaches have been proposed, these can be difficult to implement efficiently, hindering a broader applications and further developments. Here, we present an easily accessible software toolkit, called ENCORE, which can be used to compare conformational ensembles generated either from simulations alone or synergistically with experiments. ENCORE implements three previously described methods for ensemble comparison, that each can be used to quantify the similarity between conformational ensembles by estimating the overlap between the probability distributions that underlie them. We demonstrate the kinds of insights that can be obtained by providing examples of three typical use-cases: comparing ensembles generated with different molecular force fields, assessing convergence in molecular simulations, and calculating differences and similarities in structural ensembles refined with various sources of experimental data. We also demonstrate efficient computational scaling for typical analyses, and robustness against both the size and sampling of the ensembles. ENCORE is freely available and extendable, integrates with the established MDAnalysis software package, reads ensemble data in many common formats, and can work with large trajectory files.</p>},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWi4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svUExvUyBDb21wdXQgQmlvbF8xMV9UaWJlcnRpXzIwMTVhLnBkZtIXCxgZV05TLmRhdGFPEQHyAAAAAAHyAAIAAAREYXRhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTJAwMSCsAAAAWMkAfUExvUyBDb21wdXQgQmlvbF8xMV8jMTY3MTIxLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZxIdJX5TUAAAAAAAAAAAAGAAUAAAkAAAAAAAAAAAAAAAAAAAAAB0JpYkRlc2sAABAACAAA0yRufAAAABEACAAA0lhHpQAAAAEAFAAWMkAAFjI+ABYvWAAVPgwAABnhAAIAU0RhdGE6b2xpdmVyOgBEb2N1bWVudHM6AFB1YmxpY2F0aW9uczoAcGRmOgBCaWJEZXNrOgBQTG9TIENvbXB1dCBCaW9sXzExXyMxNjcxMjEucGRmAAAOAEwAJQBQAEwAbwBTACAAQwBvAG0AcAB1AHQAIABCAGkAbwBsAF8AMQAxAF8AVABpAGIAZQByAHQAaQBfADIAMAAxADUAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBQL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL1BMb1MgQ29tcHV0IEJpb2xfMTFfVGliZXJ0aV8yMDE1YS5wZGYAEwANL1ZvbHVtZXMvRGF0YQD//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDrAPAA+ALuAvAC9QMAAwkDFwMbAyIDKwMwAz0DQANSA1UDWgAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANc},
	Bdsk-Url-1 = {http://dx.doi.org/10.1371%2Fjournal.pcbi.1004415},
	Bdsk-Url-2 = {http://dx.doi.org/10.1371/journal.pcbi.1004415}}

@article{Seyler:2015fk,
	Author = {Seyler, Sean L. and Kumar, Avishek and Thorpe, M. F. and Beckstein, Oliver},
	Date-Added = {2016-05-13 19:22:41 +0000},
	Date-Modified = {2016-05-13 19:22:41 +0000},
	Doi = {10.1371/journal.pcbi.1004568},
	Journal = {PLoS Comput Biol},
	Keywords = {PSA, MDAnalysis, AdK},
	Month = {10},
	Number = {10},
	Pages = {e1004568},
	Publisher = {Public Library of Science},
	Title = {Path Similarity Analysis: A Method for Quantifying Macromolecular Pathways},
	Url = {http://dx.doi.org/10.1371%2Fjournal.pcbi.1004568},
	Volume = {11},
	Year = {2015},
	Abstract = {Diverse classes of proteins function through large-scale conformational changes and vari- ous sophisticated computational algorithms have been proposed to enhance sampling of these macromolecular transition paths. Because such paths are curves in a high-dimen- sional space, it has been difficult to quantitatively compare multiple paths, a necessary pre- requisite to, for instance, assess the quality of different algorithms. We introduce a method named Path Similarity Analysis (PSA) that enables us to quantify the similarity between two arbitrary paths and extract the atomic-scale determinants responsible for their differences. PSA utilizes the full information available in 3N-dimensional configuration space trajectories by employing the Hausdorff or Fr{\'e}chet metrics (adopted from computational geometry) to quantify the degree of similarity between piecewise-linear curves. It thus completely avoids relying on projections into low dimensional spaces, as used in traditional approaches. To elucidate the principles of PSA, we quantified the effect of path roughness induced by ther- mal fluctuations using a toy model system. Using, as an example, the closed-to-open transi- tions of the enzyme adenylate kinase (AdK) in its substrate-free form, we compared a range of protein transition path-generating algorithms. Molecular dynamics-based dynamic impor- tance sampling (DIMS) MD and targeted MD (TMD) and the purely geometric FRODA (Framework Rigidity Optimized Dynamics Algorithm) were tested along with seven other methods publicly available on servers, including several based on the popular elastic net- work model (ENM). PSA with clustering revealed that paths produced by a given method are more similar to each other than to those from another method and, for instance, that the ENM-based methods produced relatively similar paths. PSA applied to ensembles of DIMS MD and FRODA trajectories of the conformational transition of diphtheria toxin, a particu- larly challenging example, showed that the geometry-based FRODA occasionally sampled the pathway space of force field-based DIMS MD. For the AdK transition, the new concept of a Hausdorff-pair map enabled us to extract the molecular structural determinants respon- sible for differences in pathways, namely a set of conserved salt bridges whose charge- charge interactions are fully modelled in DIMS MD but not in FRODA. PSA has the potential to enhance our understanding of transition path sampling methods, validate them, and to provide a new approach to analyzing conformational transitions.

<title>Author Summary</title> <p>Many proteins are nanomachines that perform mechanical or chemical work by changing their three-dimensional shape and cycle between multiple conformational states. Computer simulations of such conformational transitions provide mechanistic insights into protein function but such simulations have been challenging. In particular, it is not clear how to quantitatively compare current simulation methods or to assess their accuracy. To that end, we present a general and flexible computational framework for quantifying transition paths---by measuring mutual geometric similarity---that, compared with existing approaches, requires minimal a-priori assumptions and can take advantage of full atomic detail alongside heuristic information derived from intuition. Using our <italic>Path Similarity Analysis</italic> (PSA) framework in parallel with several existing quantitative approaches, we examine transitions generated for a toy model of a transition and two biological systems, the enzyme adenylate kinase and diphtheria toxin. Our results show that PSA enables the quantitative comparison of different path sampling methods and aids the identification of potentially important atomistic motions by exploiting geometric information in transition paths. The method has the potential to enhance our understanding of transition path sampling methods, validate them, and to provide a new approach to analyzing macromolecular conformational transitions.</p>},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWS4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svUExvUyBDb21wdXQgQmlvbF8xMV9TZXlsZXJfMjAxNWEucGRm0hcLGBlXTlMuZGF0YU8RAfAAAAAAAfAAAgAABERhdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANMkDAxIKwAAABYyQB9QTG9TIENvbXB1dCBCaW9sXzExXyMxNjcwRkUucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnD+0k1/+AAAAAAAAAAAAAYABQAACQAAAAAAAAAAAAAAAAAAAAAHQmliRGVzawAAEAAIAADTJG58AAAAEQAIAADSTeJoAAAAAQAUABYyQAAWMj4AFi9YABU+DAAAGeEAAgBTRGF0YTpvbGl2ZXI6AERvY3VtZW50czoAUHVibGljYXRpb25zOgBwZGY6AEJpYkRlc2s6AFBMb1MgQ29tcHV0IEJpb2xfMTFfIzE2NzBGRS5wZGYAAA4ASgAkAFAATABvAFMAIABDAG8AbQBwAHUAdAAgAEIAaQBvAGwAXwAxADEAXwBTAGUAeQBsAGUAcgBfADIAMAAxADUAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBPL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL1BMb1MgQ29tcHV0IEJpb2xfMTFfU2V5bGVyXzIwMTVhLnBkZgAAEwANL1ZvbHVtZXMvRGF0YQD//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDqAO8A9wLrAu0C8gL9AwYDFAMYAx8DKAMtAzoDPQNPA1IDVwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANZ},
	Bdsk-File-2 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWS4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svUExvUyBDb21wdXQgQmlvbF8xMV9TZXlsZXJfMjAxNWIucGRm0hcLGBlXTlMuZGF0YU8RAfAAAAAAAfAAAgAABERhdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANMkDAxIKwAAABYyQB9QTG9TIENvbXB1dCBCaW9sXzExXyMxNjcxMDQucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnEE0k5l/QAAAAAAAAAAAAYABQAACQAAAAAAAAAAAAAAAAAAAAAHQmliRGVzawAAEAAIAADTJG58AAAAEQAIAADSTshtAAAAAQAUABYyQAAWMj4AFi9YABU+DAAAGeEAAgBTRGF0YTpvbGl2ZXI6AERvY3VtZW50czoAUHVibGljYXRpb25zOgBwZGY6AEJpYkRlc2s6AFBMb1MgQ29tcHV0IEJpb2xfMTFfIzE2NzEwNC5wZGYAAA4ASgAkAFAATABvAFMAIABDAG8AbQBwAHUAdAAgAEIAaQBvAGwAXwAxADEAXwBTAGUAeQBsAGUAcgBfADIAMAAxADUAYgAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBPL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL1BMb1MgQ29tcHV0IEJpb2xfMTFfU2V5bGVyXzIwMTViLnBkZgAAEwANL1ZvbHVtZXMvRGF0YQD//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDqAO8A9wLrAu0C8gL9AwYDFAMYAx8DKAMtAzoDPQNPA1IDVwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANZ},
	Bdsk-File-3 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWS4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svUExvUyBDb21wdXQgQmlvbF8xMV9TZXlsZXJfMjAxNWMucGRm0hcLGBlXTlMuZGF0YU8RAfAAAAAAAfAAAgAABERhdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANMkDAxIKwAAABYyQB9QTG9TIENvbXB1dCBCaW9sXzExXyMxNjcxMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnEW0k5mLQAAAAAAAAAAAAYABQAACQAAAAAAAAAAAAAAAAAAAAAHQmliRGVzawAAEAAIAADTJG58AAAAEQAIAADSTsidAAAAAQAUABYyQAAWMj4AFi9YABU+DAAAGeEAAgBTRGF0YTpvbGl2ZXI6AERvY3VtZW50czoAUHVibGljYXRpb25zOgBwZGY6AEJpYkRlc2s6AFBMb1MgQ29tcHV0IEJpb2xfMTFfIzE2NzExNi5wZGYAAA4ASgAkAFAATABvAFMAIABDAG8AbQBwAHUAdAAgAEIAaQBvAGwAXwAxADEAXwBTAGUAeQBsAGUAcgBfADIAMAAxADUAYwAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBPL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL1BMb1MgQ29tcHV0IEJpb2xfMTFfU2V5bGVyXzIwMTVjLnBkZgAAEwANL1ZvbHVtZXMvRGF0YQD//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDqAO8A9wLrAu0C8gL9AwYDFAMYAx8DKAMtAzoDPQNPA1IDVwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANZ},
	Bdsk-Url-1 = {http://dx.doi.org/10.1371%2Fjournal.pcbi.1004568},
	Bdsk-Url-2 = {http://dx.doi.org/10.1371/journal.pcbi.1004568}}

@article{Michaud-Agrawal:2011fu,
	Author = {Michaud-Agrawal, Naveen and Denning, Elizabeth Jane and Woolf, Thomas B. and Beckstein, Oliver},
	Date-Added = {2016-05-13 19:22:29 +0000},
	Date-Modified = {2016-05-13 19:22:29 +0000},
	Doi = {10.1002/jcc.21787},
	Journal = {J Comp Chem},
	Keywords = {MDAnalysis, molecular dynamics (MD) simulation, Python},
	Pages = {2319--2327},
	Title = {{MDAnalysis}: A Toolkit for the Analysis of Molecular Dynamics Simulations},
	Volume = {32},
	Year = {2011},
	Abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, and NAMD and the Protein Data Bank format can be read and written.  Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU Public License from http://mdanalysis.org.},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QXS4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svSiBDb21wIENoZW1fMzJfTWljaGF1ZC1BZ3Jhd2FsXzIwMTFhLnBkZtIXCxgZV05TLmRhdGFPEQH8AAAAAAH8AAIAAAREYXRhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTJAwMSCsAAAAWMkAfSiBDb21wIENoZW1fMzJfTWljaGEjMTY1Mjg5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZSicvj6IQAAAAAAAAAAAAGAAUAAAkAAAAAAAAAAAAAAAAAAAAAB0JpYkRlc2sAABAACAAA0yRufAAAABEACAAAy+RK9AAAAAEAFAAWMkAAFjI+ABYvWAAVPgwAABnhAAIAU0RhdGE6b2xpdmVyOgBEb2N1bWVudHM6AFB1YmxpY2F0aW9uczoAcGRmOgBCaWJEZXNrOgBKIENvbXAgQ2hlbV8zMl9NaWNoYSMxNjUyODkucGRmAAAOAFIAKABKACAAQwBvAG0AcAAgAEMAaABlAG0AXwAzADIAXwBNAGkAYwBoAGEAdQBkAC0AQQBnAHIAYQB3AGEAbABfADIAMAAxADEAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBTL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL0ogQ29tcCBDaGVtXzMyX01pY2hhdWQtQWdyYXdhbF8yMDExYS5wZGYAABMADS9Wb2x1bWVzL0RhdGEA//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A7gDzAPsC+wL9AwIDDQMWAyQDKAMvAzgDPQNKA00DXwNiA2cAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADaQ==},
	Bdsk-File-2 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QXy4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svSiBDb21wIENoZW1fZXB1Yl9NaWNoYXVkLUFncmF3YWxfMjAxMWIucGRm0hcLGBlXTlMuZGF0YU8RAgIAAAAAAgIAAgAABERhdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANMkDAxIKwAAABYyQB9KIENvbXAgQ2hlbV9lcHViX01pYyMxNjUyOTAucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlKQydhF7wAAAAAAAAAAAAYABQAACQAAAAAAAAAAAAAAAAAAAAAHQmliRGVzawAAEAAIAADTJG58AAAAEQAIAADJ2KhfAAAAAQAUABYyQAAWMj4AFi9YABU+DAAAGeEAAgBTRGF0YTpvbGl2ZXI6AERvY3VtZW50czoAUHVibGljYXRpb25zOgBwZGY6AEJpYkRlc2s6AEogQ29tcCBDaGVtX2VwdWJfTWljIzE2NTI5MC5wZGYAAA4AVgAqAEoAIABDAG8AbQBwACAAQwBoAGUAbQBfAGUAcAB1AGIAXwBNAGkAYwBoAGEAdQBkAC0AQQBnAHIAYQB3AGEAbABfADIAMAAxADEAYgAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBVL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL0ogQ29tcCBDaGVtX2VwdWJfTWljaGF1ZC1BZ3Jhd2FsXzIwMTFiLnBkZgAAEwANL1ZvbHVtZXMvRGF0YQD//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDwAPUA/QMDAwUDCgMVAx4DLAMwAzcDQANFA1IDVQNnA2oDbwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANx},
	Bdsk-Url-1 = {http://www.mdanalysis.org},
	Bdsk-Url-2 = {http://dx.doi.org/10.1002/jcc.21787}}

@article{Perez2007,
abstract = {Python offers basic facilities for interactive work and a comprehensive library on top of which more sophisticated systems can be built. The IPython project provides an enhanced interactive environment that includes, among other features, support for data visualization and facilities for distributed and parallel computation.},
author = {P{\'{e}}rez, Fernando and Granger, Brian E.},
doi = {10.1109/MCSE.2007.53},
isbn = {3518437208},
issn = {15219615},
journal = {Comput. Sci. Eng.},
mendeley-groups = {Software},
number = {3},
pages = {21--29},
title = {{IPython: A system for interactive scientific computing}},
volume = {9},
year = {2007}
}

@article{McKinney2010,
abstract = {In this paper we are concerned with the practical issues of working with data sets common to finance, statistics, and other related fields. pandas is a new library which aims to facilitate working with these data sets and to provide a set of fundamental building blocks for implementing statistical models. We will discuss specific design issues encountered in the course of developing pandas with relevant examples and some comparisons with the R language. We conclude by discussing possible future directions for statistical computing and data analysis using Python.},
author = {McKinney, Wes},
isbn = {0440877763224},
journal = {Proc. 9th Python Sci. Conf.},
mendeley-groups = {Software},
number = {Scipy},
pages = {51--56},
pmid = {1000224767},
title = {{Data Structures for Statistical Computing in Python}},
url = {http://conference.scipy.org/proceedings/scipy2010/mckinney.html},
volume = {1697900},
year = {2010}
}

@article{VanDerWalt2011,
abstract = {In the Python world, NumPy arrays are the standard representation for numerical data and enable efficient implementation of numerical computations in a high-level language. As this effort shows, NumPy performance can be improved through three techniques: vectorizing calculations, avoiding copying data in memory, and minimizing operation counts.},
archivePrefix = {arXiv},
arxivId = {1102.1523},
author = {{Van Der Walt}, Stefan and Colbert, S. Chris and Varoquaux, Gael},
doi = {10.1109/MCSE.2011.37},
eprint = {1102.1523},
isbn = {1521-9615 VO - 13},
issn = {15219615},
journal = {Comput. Sci. Eng.},
keywords = {NumPy,Python,numerical computations,programming libraries,scientific programming},
mendeley-groups = {Software},
number = {2},
pages = {22--30},
pmid = {1000224770},
title = {{The NumPy array: A structure for efficient numerical computation}},
volume = {13},
year = {2011}
}
